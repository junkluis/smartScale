/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef TECLADOVIEWBASE_HPP
#define TECLADOVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/teclado_screen/tecladoPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/Button.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>

class tecladoViewBase : public touchgfx::View<tecladoPresenter>
{
public:
    tecladoViewBase();
    virtual ~tecladoViewBase() {}
    virtual void setupScreen();
    virtual void afterTransition();

    /*
     * Virtual Action Handlers
     */
    virtual void obtenerAccion()
    {
        // Override and implement this function in teclado
    }

    virtual void registrarEntradaTeclado()
    {
        // Override and implement this function in teclado
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box box1;
    touchgfx::Button btn_ok;
    touchgfx::TextAreaWithOneWildcard txt_accion;

    /*
     * Wildcard Buffers
     */
    static const uint16_t TXT_ACCION_SIZE = 10;
    touchgfx::Unicode::UnicodeChar txt_accionBuffer[TXT_ACCION_SIZE];

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<tecladoViewBase, const touchgfx::AbstractButton&> buttonCallback;

    /*
     * Callback Handler Declarations
     */
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);

};

#endif // TECLADOVIEWBASE_HPP
