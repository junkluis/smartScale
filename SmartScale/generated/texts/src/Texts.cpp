/* DO NOT EDIT THIS FILE */
/* This file is autogenerated by the text-database code generator */

#include <stdarg.h>
#include <touchgfx/Texts.hpp>
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/TypedText.hpp>
#include <texts/TypedTextDatabase.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <touchgfx/TextProvider.hpp>

touchgfx::Font::StringWidthFunctionPointer touchgfx::Font::getStringWidthFunction = &touchgfx::Font::getStringWidthLTR;
touchgfx::LCD::DrawStringFunctionPointer touchgfx::LCD::drawStringFunction = &touchgfx::LCD::drawStringLTR;
touchgfx::TextProvider::UnicodeConverterInitFunctionPointer touchgfx::TextProvider::unicodeConverterInitFunction = static_cast<touchgfx::TextProvider::UnicodeConverterInitFunctionPointer>(0);
touchgfx::TextProvider::UnicodeConverterFunctionPointer touchgfx::TextProvider::unicodeConverterFunction = static_cast<touchgfx::TextProvider::UnicodeConverterFunctionPointer>(0);

//Default typed text database
extern const touchgfx::TypedText::TypedTextData* const typedTextDatabaseArray[];

TEXT_LOCATION_FLASH_PRAGMA
KEEP extern const touchgfx::Unicode::UnicodeChar texts_all_languages[] TEXT_LOCATION_FLASH_ATTRIBUTE =
{
    0x53, 0x65, 0x6c, 0x65, 0x63, 0x63, 0x69, 0x6f, 0x6e, 0x65, 0xa, 0x65, 0x6c, 0x20, 0x70, 0x65, 0x72, 0x66, 0x69, 0x6c, 0xa, 0x64, 0x65, 0x6c, 0x20, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x6f, 0x0, // @0 "Seleccione?el perfil?del producto"
    0x64, 0x69, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x69, 0x61, 0x20, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x74, 0x69, 0x64, 0x61, 0x0, // @34 "diferencia permitida"
    0x42, 0x61, 0x6c, 0x61, 0x6e, 0x7a, 0x61, 0xa, 0x49, 0x6e, 0x74, 0x65, 0x6c, 0x69, 0x67, 0x65, 0x6e, 0x74, 0x65, 0x0, // @55 "Balanza?Inteligente"
    0x64, 0x69, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x69, 0x61, 0x20, 0x6f, 0x62, 0x74, 0x65, 0x6e, 0x69, 0x64, 0x61, 0x0, // @75 "diferencia obtenida"
    0x42, 0x61, 0x6c, 0x61, 0x6e, 0x7a, 0x61, 0x20, 0x49, 0x6e, 0x74, 0x65, 0x6c, 0x69, 0x67, 0x65, 0x6e, 0x74, 0x65, 0x0, // @95 "Balanza Inteligente"
    0x44, 0x61, 0x74, 0x6f, 0x73, 0x20, 0xa, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x6f, 0x73, 0x0, // @115 "Datos ?Invalidos"
    0x76, 0x6f, 0x6c, 0x76, 0x65, 0x72, 0x20, 0x61, 0x20, 0x70, 0x65, 0x73, 0x61, 0x72, 0x3f, 0x0, // @132 "volver a pesar?"
    0x4d, 0x65, 0x6e, 0x75, 0x20, 0x50, 0x72, 0x69, 0x6e, 0x63, 0x69, 0x70, 0x61, 0x6c, 0x0, // @148 "Menu Principal"
    0x70, 0x65, 0x73, 0x6f, 0x20, 0x65, 0x73, 0x70, 0x65, 0x72, 0x61, 0x64, 0x6f, 0x0, // @163 "peso esperado"
    0x50, 0x65, 0x73, 0x6f, 0x20, 0x4f, 0x62, 0x74, 0x65, 0x6e, 0x69, 0x64, 0x6f, 0x0, // @177 "Peso Obtenido"
    0x2, 0x0, // @191 "<>"
    0x50, 0x65, 0x72, 0x66, 0x69, 0x6c, 0x20, 0x76, 0x61, 0x63, 0x69, 0x6f, 0x0, // @193 "Perfil vacio"
    0x45, 0x6e, 0x76, 0x69, 0x61, 0x72, 0x20, 0x44, 0x61, 0x74, 0x6f, 0x73, 0x0, // @206 "Enviar Datos"
    0x50, 0x65, 0x72, 0x66, 0x69, 0x6c, 0x20, 0x56, 0x61, 0x63, 0x69, 0x6f, 0x0, // @219 "Perfil Vacio"
    0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x63, 0x69, 0xf3, 0x6e, 0x0, // @232 "Informaci?n"
    0x20, 0x20, 0x20, 0x20, 0x45, 0x6e, 0x76, 0x69, 0x61, 0x72, 0x0, // @244 "    Enviar"
    0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x61, 0x64, 0x6f, 0x73, 0x0, // @255 "Resultados"
    0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x61, 0x64, 0x6f, 0x0, // @266 "Resultado"
    0x2, 0x20, 0x5b, 0x6b, 0x67, 0x5d, 0x0, // @276 "<> [kg]"
    0x2, 0x20, 0x5b, 0x4b, 0x67, 0x5d, 0x0, // @283 "<> [Kg]"
    0x50, 0x72, 0x6f, 0x6d, 0x65, 0x64, 0x69, 0x6f, 0x0, // @290 "Promedio"
    0x45, 0x6d, 0x70, 0x65, 0x7a, 0x61, 0x72, 0x0, // @299 "Empezar"
    0x41, 0x4c, 0x45, 0x52, 0x54, 0x41, 0x0, // @307 "ALERTA"
    0x50, 0x65, 0x72, 0x66, 0x69, 0x6c, 0x0, // @314 "Perfil"
    0x50, 0x65, 0x73, 0x61, 0x72, 0x0, // @321 "Pesar"
    0x30, 0x30, 0x2e, 0x30, 0x30, 0x0, // @327 "00.00"
    0x53, 0x61, 0x6c, 0x69, 0x72, 0x0, // @333 "Salir"
    0x31, 0x32, 0x33, 0x0, // @339 "123"
    0x41, 0x42, 0x43, 0x0, // @343 "ABC"
    0x4f, 0x4b, 0x0 // @347 "OK"
};
extern uint32_t const indicesGb[];

//array holding dynamically installed languages
struct TranslationHeader
{
    uint32_t offset_to_texts;
    uint32_t offset_to_indices;
    uint32_t offset_to_typedtext;
};
static const TranslationHeader* languagesArray[1] = { 0 };

//Compiled and linked in languages
static const uint32_t* const staticLanguageIndices[] =
{
    indicesGb
};

touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 1)
    {
        if (languagesArray[id] != 0)
        {
            //dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
        }
        else
        {
            //compiled and linked in languages
            currentLanguagePtr = texts_all_languages;
            currentLanguageIndices = staticLanguageIndices[id];
            currentLanguageTypedText = typedTextDatabaseArray[id];
        }
    }

    if (currentLanguageTypedText)
    {
        currentLanguage = id;
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
    }
}

void touchgfx::Texts::setTranslation(touchgfx::LanguageId id, const void* translation)
{
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
    return &currentLanguagePtr[currentLanguageIndices[id]];
}

